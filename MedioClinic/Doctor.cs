//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at http://docs.kentico.com.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine.Types.MedioClinic;
using CMS.DocumentEngine;

[assembly: RegisterDocumentType(Doctor.CLASS_NAME, typeof(Doctor))]

namespace CMS.DocumentEngine.Types.MedioClinic
{
    /// <summary>
    /// Represents a content item of type Doctor.
    /// </summary>
    public partial class Doctor : TreeNode
    {
        #region "Constants and variables"

        /// <summary>
        /// The name of the data class.
        /// </summary>
        public const string CLASS_NAME = "MedioClinic.Doctor";


        /// <summary>
        /// The instance of the class that provides extended API for working with Doctor fields.
        /// </summary>
        private readonly DoctorFields mFields;

        #endregion


        #region "Properties"

        /// <summary>
        /// DoctorID.
        /// </summary>
        [DatabaseIDField]
        public int DoctorID
        {
            get
            {
                return ValidationHelper.GetInteger(GetValue("DoctorID"), 0);
            }
            set
            {
                SetValue("DoctorID", value);
            }
        }


        /// <summary>
        /// Full Name.
        /// </summary>
        [DatabaseField]
        public string DoctorFullName
        {
            get
            {
                return ValidationHelper.GetString(GetValue("DoctorFullName"), "");
            }
            set
            {
                SetValue("DoctorFullName", value);
            }
        }


        /// <summary>
        /// Expertise.
        /// </summary>
        [DatabaseField]
        public string DoctorExpertise
        {
            get
            {
                return ValidationHelper.GetString(GetValue("DoctorExpertise"), "");
            }
            set
            {
                SetValue("DoctorExpertise", value);
            }
        }


        /// <summary>
        /// OpeningHours.
        /// </summary>
        [DatabaseField]
        public string DoctorOpeningHours
        {
            get
            {
                return ValidationHelper.GetString(GetValue("DoctorOpeningHours"), "");
            }
            set
            {
                SetValue("DoctorOpeningHours", value);
            }
        }


        /// <summary>
        /// Note.
        /// </summary>
        [DatabaseField]
        public string DoctorNote
        {
            get
            {
                return ValidationHelper.GetString(GetValue("DoctorNote"), "");
            }
            set
            {
                SetValue("DoctorNote", value);
            }
        }


        /// <summary>
        /// Image.
        /// </summary>
        [DatabaseField]
        public Guid DoctorImage
        {
            get
            {
                return ValidationHelper.GetGuid(GetValue("DoctorImage"), Guid.Empty);
            }
            set
            {
                SetValue("DoctorImage", value);
            }
        }


        /// <summary>
        /// Gets an object that provides extended API for working with Doctor fields.
        /// </summary>
        [RegisterProperty]
        public DoctorFields Fields
        {
            get
            {
                return mFields;
            }
        }


        /// <summary>
        /// Provides extended API for working with Doctor fields.
        /// </summary>
        [RegisterAllProperties]
        public partial class DoctorFields : AbstractHierarchicalObject<DoctorFields>
        {
            /// <summary>
            /// The content item of type Doctor that is a target of the extended API.
            /// </summary>
            private readonly Doctor mInstance;


            /// <summary>
            /// Initializes a new instance of the <see cref="DoctorFields" /> class with the specified content item of type Doctor.
            /// </summary>
            /// <param name="instance">The content item of type Doctor that is a target of the extended API.</param>
            public DoctorFields(Doctor instance)
            {
                mInstance = instance;
            }


            /// <summary>
            /// DoctorID.
            /// </summary>
            public int ID
            {
                get
                {
                    return mInstance.DoctorID;
                }
                set
                {
                    mInstance.DoctorID = value;
                }
            }


            /// <summary>
            /// Full Name.
            /// </summary>
            public string FullName
            {
                get
                {
                    return mInstance.DoctorFullName;
                }
                set
                {
                    mInstance.DoctorFullName = value;
                }
            }


            /// <summary>
            /// Expertise.
            /// </summary>
            public string Expertise
            {
                get
                {
                    return mInstance.DoctorExpertise;
                }
                set
                {
                    mInstance.DoctorExpertise = value;
                }
            }


            /// <summary>
            /// OpeningHours.
            /// </summary>
            public string OpeningHours
            {
                get
                {
                    return mInstance.DoctorOpeningHours;
                }
                set
                {
                    mInstance.DoctorOpeningHours = value;
                }
            }


            /// <summary>
            /// Note.
            /// </summary>
            public string Note
            {
                get
                {
                    return mInstance.DoctorNote;
                }
                set
                {
                    mInstance.DoctorNote = value;
                }
            }


            /// <summary>
            /// Image.
            /// </summary>
            public Attachment Image
            {
                get
                {
                    return mInstance.GetFieldAttachment("DoctorImage");
                }
            }
        }

        #endregion


        #region "Constructors"

        /// <summary>
        /// Initializes a new instance of the <see cref="Doctor" /> class.
        /// </summary>
        public Doctor() : base(CLASS_NAME)
        {
            mFields = new DoctorFields(this);
        }

        #endregion
    }
}